"""Verificando estrutura apos correcao .env

Revision ID: 663250f7fddc
Revises: 
Create Date: 2025-05-08 20:03:41.468256

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '663250f7fddc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('casos', schema=None) as batch_op:
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_atualizacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_casos_cliente_id')
        batch_op.drop_index('idx_casos_numero_processo')
        batch_op.drop_constraint('fk_cliente', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clientes', ['cliente_id'], ['id'])

    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_atualizacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_clientes_cpf_cnpj')

    with op.batch_alter_table('despesas', schema=None) as batch_op:
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_atualizacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_despesas_caso_id')
        batch_op.drop_constraint('fk_caso_despesa', type_='foreignkey')
        batch_op.create_foreign_key(None, 'casos', ['caso_id'], ['id'])

    with op.batch_alter_table('documentos', schema=None) as batch_op:
        batch_op.alter_column('data_upload',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_documentos_caso_id')
        batch_op.drop_index('idx_documentos_cliente_id')
        batch_op.drop_constraint('fk_caso_documento', type_='foreignkey')
        batch_op.drop_constraint('fk_cliente_documento', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clientes', ['cliente_id'], ['id'])
        batch_op.create_foreign_key(None, 'casos', ['caso_id'], ['id'])

    with op.batch_alter_table('eventos_agenda', schema=None) as batch_op:
        batch_op.alter_column('data_inicio',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('data_fim',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_atualizacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_eventos_agenda_caso_id')
        batch_op.drop_index('idx_eventos_agenda_data_inicio')
        batch_op.drop_constraint('fk_caso_evento', type_='foreignkey')
        batch_op.create_foreign_key(None, 'casos', ['caso_id'], ['id'])

    with op.batch_alter_table('recebimentos', schema=None) as batch_op:
        batch_op.alter_column('data_criacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_atualizacao',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index('idx_recebimentos_caso_id')
        batch_op.drop_index('idx_recebimentos_cliente_id')
        batch_op.drop_constraint('fk_cliente_recebimento', type_='foreignkey')
        batch_op.drop_constraint('fk_caso_recebimento', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clientes', ['cliente_id'], ['id'])
        batch_op.create_foreign_key(None, 'casos', ['caso_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recebimentos', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_caso_recebimento', 'casos', ['caso_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_cliente_recebimento', 'clientes', ['cliente_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_recebimentos_cliente_id', ['cliente_id'], unique=False)
        batch_op.create_index('idx_recebimentos_caso_id', ['caso_id'], unique=False)
        batch_op.alter_column('data_atualizacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_criacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('eventos_agenda', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_caso_evento', 'casos', ['caso_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index('idx_eventos_agenda_data_inicio', ['data_inicio'], unique=False)
        batch_op.create_index('idx_eventos_agenda_caso_id', ['caso_id'], unique=False)
        batch_op.alter_column('data_atualizacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_criacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_fim',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('data_inicio',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('documentos', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_cliente_documento', 'clientes', ['cliente_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_caso_documento', 'casos', ['caso_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index('idx_documentos_cliente_id', ['cliente_id'], unique=False)
        batch_op.create_index('idx_documentos_caso_id', ['caso_id'], unique=False)
        batch_op.alter_column('data_upload',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('despesas', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_caso_despesa', 'casos', ['caso_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index('idx_despesas_caso_id', ['caso_id'], unique=False)
        batch_op.alter_column('data_atualizacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_criacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.create_index('idx_clientes_cpf_cnpj', ['cpf_cnpj'], unique=False)
        batch_op.alter_column('data_atualizacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_criacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('casos', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_cliente', 'clientes', ['cliente_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_casos_numero_processo', ['numero_processo'], unique=False)
        batch_op.create_index('idx_casos_cliente_id', ['cliente_id'], unique=False)
        batch_op.alter_column('data_atualizacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_criacao',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    # ### end Alembic commands ###
